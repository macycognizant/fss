{"version":3,"sources":["assests/images/Print.svg","assests/images/Card.svg","assests/images/OtherFunctions.svg","assests/images/BoxSearch.svg","assests/images/AccountGroup.svg","assests/images/Dots.svg","theme/theme.js","pages/Login.js","pages/SalesZone.js","components/BottomBar.js","pages/Dashboard.js","pages/Barcode.js","App.js","serviceWorker.js","index.js","assests/images/CartOutline.svg"],"names":["module","exports","__webpack_require__","p","createMuiTheme","typography","useNextVariants","palette","primary","main","secondary","blue","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","button","margin","fab","width","passwordField","formControl","withRouter","props","classes","_useGlobal","useGlobal","_useGlobal2","Object","slicedToArray","setUserName","react_default","a","createElement","Grid","alignItems","justify","style","minHeight","item","xs","react_svg_esm","src","process","Typography","variant","className","noValidate","autoComplete","TextField","id","label","onChange","e","target","value","fullWidth","FormControl","InputLabel","htmlFor","PasswordField_default","Fab","color","aria-label","classNames","onClick","history","push","root","selectEmpty","marginTop","wrap","IOSSwitch","withStyles","height","padding","switchBase","&$checked","transform","common","white","& + $track","backgroundColor","opacity","border","&$focusVisible $thumb","thumb","track","borderRadius","concat","grey","transition","transitions","create","checked","focusVisible","_ref","objectWithoutProperties","Switch","assign","focusVisibleClassName","disableRipple","userName","NativeSelect","native","inputProps","name","align","component","bottomBar","position","bottom","BottomNavigation","BottomNavigationAction","icon","boxSearch","accountGroup","dots","card","cardContent","bigAvatar","direction","Avatar","gutterBottom","Card","CardActionArea","CardContent","print","cartOutline","otherFunctions","components_BottomBar","App","MuiThemeProvider_default","react_router_dom","basename","react_router","exact","path","Login","SalesZone","Dashboard","Barcode","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.144def0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Print.976b7198.svg\";","module.exports = __webpack_public_path__ + \"static/media/Card.5d71bf26.svg\";","module.exports = __webpack_public_path__ + \"static/media/OtherFunctions.5fcf1949.svg\";","module.exports = __webpack_public_path__ + \"static/media/BoxSearch.610f1cc2.svg\";","module.exports = __webpack_public_path__ + \"static/media/AccountGroup.c97b58ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dots.027367ac.svg\";","import { createMuiTheme } from '@material-ui/core/styles'\r\nimport blue from '@material-ui/core/colors/blue'\r\nimport pink from '@material-ui/core/colors/pink'\r\nimport red from '@material-ui/core/colors/red'\r\n\r\nexport default createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#c62828'\r\n        },\r\n        secondary: blue\r\n    }\r\n})\r\n","import React from 'react'\r\nimport { useGlobal } from 'reactn'\r\nimport ReactSVG from 'react-svg'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport classNames from 'classnames'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withRouter } from \"react-router-dom\"\r\nimport PasswordField from 'material-ui-password-field'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\n// import PasswordField from '../components/PasswordField'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    fab: {\r\n        width: 123\r\n    },\r\n    passwordField: {\r\n        width: '100%'\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    }\r\n\r\n}));\r\nfunction Login (props) {\r\n    const classes = useStyles()\r\n    const [ userName, setUserName ] = useGlobal('userName')\r\n    function handleLogin () {\r\n        props.history.push(\"/salesZone\");\r\n    }\r\n    function handleChange (e) {\r\n        setUserName(e.target.value)\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid container\r\n                spacing={0}\r\n                alignItems='center'\r\n                justify='center'\r\n                style={{ minHeight: '100vh' }} >\r\n                {/* row 1 */}\r\n                <Grid item xs={7} />\r\n                <Grid item xs={4} >\r\n                    <ReactSVG src={process.env.PUBLIC_URL + '/img/Macys_logo.svg'} />\r\n                    <Typography variant=\"h5\">\r\n                        Full Service Selling\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n                {/* row 2 */}\r\n                <Grid item xs={4} >\r\n                    <Typography variant=\"h4\">\r\n                        Login\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={8} />\r\n                {/* row 3 */}\r\n                <Grid item xs={10} >\r\n                    <form className={classes.container} noValidate autoComplete='off'>\r\n                        <TextField\r\n                            id='user-Name'\r\n                            label='Username'\r\n                            className={classes.textField}\r\n                            // value={values.name}\r\n                            onChange={handleChange}\r\n                            margin='normal'\r\n                            variant='filled'\r\n                            fullWidth={true}\r\n                        />\r\n                        \r\n                        \r\n                        <FormControl className={classes.formControl}>\r\n                        <InputLabel className={classes.textField} htmlFor='password-label'>Password</InputLabel>\r\n                        <PasswordField\r\n                            id='password-label'\r\n                            className={classes.passwordField}\r\n                            \r\n                        />\r\n                        \r\n                        </FormControl>\r\n                    </form>\r\n                </Grid>\r\n                {/* row 4 */}\r\n                <Grid item xs={6} />\r\n                <Grid item xs={6}>\r\n                    <Fab \r\n                        variant=\"extended\" \r\n                        color=\"primary\" \r\n                        aria-label=\"Login\" \r\n                        className={classNames(classes.margin, classes.fab)}\r\n                        onClick={() => handleLogin()} >\r\n                        Login\r\n                    </Fab>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(Login)","import React from 'react'\r\nimport { useGlobal } from 'reactn'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Switch from '@material-ui/core/Switch'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ReactSVG from 'react-svg'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport NativeSelect from '@material-ui/core/NativeSelect'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { withRouter } from 'react-router-dom'\r\nimport classNames from 'classnames'\r\nimport Fab from '@material-ui/core/Fab'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: 2,\r\n        fullWidth: true,\r\n        display: \"flex\",\r\n        wrap: \"nowrap\"\r\n    },\r\n    fab: {\r\n        width: 123\r\n    }\r\n}))\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n      width: 42,\r\n      height: 26,\r\n      padding: 3,\r\n      margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n      padding: 1,\r\n      '&$checked': {\r\n        transform: 'translateX(16px)',\r\n        color: theme.palette.common.white,\r\n        '& + $track': {\r\n          backgroundColor: '#52d869',\r\n          opacity: 1,\r\n          border: 'none',\r\n        },\r\n      },\r\n      '&$focusVisible $thumb': {\r\n        color: '#52d869',\r\n        border: '6px solid #fff',\r\n      },\r\n    },\r\n    thumb: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    track: {\r\n      borderRadius: 26 / 2,\r\n      border: `1px solid ${theme.palette.grey[700]}`,\r\n      backgroundColor: theme.palette.grey[50],\r\n      opacity: 1,\r\n      transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n      <Switch\r\n        focusVisibleClassName={classes.focusVisible}\r\n        disableRipple\r\n        classes={{\r\n          root: classes.root,\r\n          switchBase: classes.switchBase,\r\n          thumb: classes.thumb,\r\n          track: classes.track,\r\n          checked: classes.checked,\r\n        }}\r\n        {...props}\r\n      />\r\n    )\r\n})\r\n  \r\nfunction SalesZone(props) {\r\n    const classes = useStyles()\r\n    const [ userName, setUserName ] = useGlobal('userName')\r\n    function handleContinue () {\r\n        props.history.push(\"/dashboard\");\r\n    }\r\n    return (\r\n        <div >\r\n            <Grid container\r\n                spacing={0}\r\n                alignItems='center'\r\n                justify='center'\r\n                style={{ minHeight: '100vh' }} >\r\n                {/* row 1 */}\r\n                <Grid item xs={7} />\r\n                <Grid item xs={4} >\r\n                    <ReactSVG src={process.env.PUBLIC_URL + '/img/Macys_logo.svg'} />\r\n                    <Typography variant=\"h5\">\r\n                        Full Service Selling\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={1} />\r\n                {/* row 2 */}\r\n                <Grid item xs={4} >\r\n                    <Typography variant=\"h4\">\r\n                        Hi, {userName}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={8} />\r\n                {/* row 3 */}\r\n                <Grid item xs={10}>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel htmlFor='sales-zone'>Sales Zone</InputLabel>\r\n                        <NativeSelect\r\n                            native\r\n                            // value={state.age}\r\n                            // onChange={handleChange('age')}\r\n                            inputProps={{\r\n                                name: 'sales zone',\r\n                                id: 'sales-zone',\r\n                            }}\r\n                            fullWidth={true} >\r\n                            <option value=''></option>\r\n                            <option value={10}>Northeast</option>\r\n                            <option value={20}>Piedmont Atlantic</option>\r\n                            <option value={30}>Florida</option>\r\n                            <option value={30}>Gulf Coast</option>\r\n                        </NativeSelect>\r\n                        <Grid item xs={12} />\r\n                    </FormControl>\r\n                    <FormControl className={classes.formControl}>\r\n                        <Typography variant=\"subtitle2\"  align='left' style={{marginTop: 1 + 'em'}}>\r\n                            Notification Alert\r\n                        </Typography>\r\n                        <Typography component=\"div\" >\r\n                            <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>Text Msgs</Grid>\r\n                                <Grid item>\r\n                                    <IOSSwitch\r\n                                // checked={state.checkedC}\r\n                                // onChange={handleChange('checkedC')}\r\n                                    value=\"checkedC\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item>Text Msgs + Audio</Grid>\r\n                            </Grid>\r\n                        </Typography>\r\n                    </FormControl>\r\n                </Grid>\r\n                {/* row 4 */}\r\n                <Grid item xs={4}>\r\n                    <Fab \r\n                        variant=\"extended\" \r\n                        color=\"primary\" \r\n                        aria-label=\"Login\" \r\n                        className={classNames(classes.margin, classes.fab)}\r\n                        // onClick={() => handleLogin()}\r\n                         >\r\n                        Logout\r\n                    </Fab>\r\n                </Grid>\r\n                <Grid item xs={4} />\r\n                <Grid item xs={4}>\r\n                    <Fab \r\n                        variant=\"extended\" \r\n                        color=\"primary\" \r\n                        aria-label=\"Login\" \r\n                        className={classNames(classes.margin, classes.fab)}\r\n                        onClick={() => handleContinue()} \r\n                        >\r\n                        Continue\r\n                    </Fab>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\nexport default withRouter(SalesZone)","import React from 'react'\r\nimport ReactSVG from 'react-svg'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction'\r\nimport boxSearch from '../assests/images/BoxSearch.svg'\r\nimport accountGroup from '../assests/images/AccountGroup.svg'\r\nimport dots from '../assests/images/Dots.svg'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    bottomBar: {\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n    }\r\n}))\r\nfunction BottomBar(props) {\r\n    const classes = useStyles()\r\n    return (\r\n        <div >\r\n            <BottomNavigation  className={classes.bottomBar}>\r\n                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<ReactSVG src={boxSearch} />} />\r\n                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<ReactSVG src={accountGroup} />} />\r\n                <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<ReactSVG src={dots} />} />\r\n            </BottomNavigation>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(BottomBar)","import React from 'react'\r\nimport ReactSVG from 'react-svg'\r\nimport { useGlobal } from 'reactn'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { withRouter } from 'react-router-dom'\r\nimport print from '../assests/images/Print.svg'\r\nimport cartOutline from '../assests/images/CartOutline.svg'\r\nimport card from '../assests/images/Card.svg'\r\nimport otherFunctions from '../assests/images/OtherFunctions.svg'\r\nimport BottomBar from '../components/BottomBar'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    card: {\r\n        width: 133,\r\n        height: 133\r\n    },\r\n    cardContent: {\r\n        height: '100%'\r\n    },\r\n    button: {\r\n        width: theme.spacing(20),\r\n        height: theme.spacing(20)\r\n    },\r\n    bigAvatar: {\r\n        margin: 10,\r\n        width: 100,\r\n        height: 100,\r\n    },\r\n    bottomBar: {\r\n        width: '100%',\r\n        position: 'fixed',\r\n        bottom: 0,\r\n    }\r\n}))\r\nfunction Dashboard(props) {\r\n    const classes = useStyles()\r\n    const [ userName, setUserName ] = useGlobal('userName')\r\n    return (\r\n        <div >\r\n            <Grid container\r\n                spacing={0}\r\n                alignItems='center'\r\n                justify='center'\r\n                style={{ minHeight: '100vh' }} >\r\n                <Grid container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={12}>\r\n                    <Avatar className={classes.bigAvatar} />\r\n                </Grid>\r\n                <Grid container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={12}>\r\n                    <Typography gutterBottom variant='h5' >\r\n                        {userName}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={12}>\r\n                    <Typography gutterBottom variant='h5' >\r\n                        ID: 754825\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid  container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center'    \r\n                    xs={6} >\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.cardContent}>\r\n                            <CardContent >\r\n                                <ReactSVG src={print} />\r\n                                <Typography gutterBottom variant='h7' >\r\n                                    Printer\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid  container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={6} >\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.cardContent}>\r\n                            <CardContent>\r\n                                <ReactSVG src={cartOutline} />\r\n                                <Typography gutterBottom variant='h7' >\r\n                                    Purchase\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={6} >\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.cardContent}>\r\n                            <CardContent>\r\n                                <ReactSVG src={card} />\r\n                                <Typography gutterBottom variant='h7' >\r\n                                    Card\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={6} >\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.cardContent}>\r\n                            <CardContent>\r\n                                <ReactSVG src={otherFunctions} />\r\n                                <Typography gutterBottom variant='h7' >\r\n                                    Other Functions\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid  container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center'    \r\n                    xs={6} >\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.cardContent}>\r\n                            <CardContent >\r\n                                <ReactSVG src={print} />\r\n                                <Typography gutterBottom variant='h7' >\r\n                                    Printer\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid  container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={6} >\r\n                    <Card className={classes.card}>\r\n                        <CardActionArea className={classes.cardContent}>\r\n                            <CardContent>\r\n                                <ReactSVG src={cartOutline} />\r\n                                <Typography gutterBottom variant='h7' >\r\n                                    Purchase\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <BottomBar />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Dashboard)","import React from 'react'\r\nimport ReactSVG from 'react-svg'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport cartOutline from '../assests/images/CartOutline.svg'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n}))\r\n\r\nfunction Barcode(props) {\r\n    return (\r\n        <div>\r\n            <Grid container\r\n                spacing={0}\r\n                alignItems='center'\r\n                justify='center'\r\n                style={{ minHeight: '100vh' }} >\r\n                <Grid container\r\n                    direction='row'\r\n                    justify='center'\r\n                    alignItems='center' \r\n                    xs={12}>\r\n                    <ReactSVG src={cartOutline} />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Barcode)","import React from 'react';\nimport './App.css';\nimport { Route, HashRouter } from 'react-router-dom'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\nimport theme from './theme/theme'\nimport Login from './pages/Login'\nimport SalesZone from './pages/SalesZone'\nimport Dashboard from './pages/Dashboard'\nimport Barcode from './pages/Barcode'\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <HashRouter basename='/'>\n        <div className='App'>\n          <Route exact path='/' component={Login} />\n          <Route exact path='/salesZone' component={SalesZone} />\n          <Route exact path='/dashboard' component={Dashboard} />\n          <Route exact path='/barcode' component={Barcode} />\n        </div>\n      </HashRouter>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/CartOutline.d3dfd988.svg\";"],"sourceRoot":""}